/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    repositories {
        maven {
            url "https://repo.mycompany.com/repo"
            metadataSources {
                mavenPom()
                artifact()
                gradleMetadata()
            }
        }
    }
}
    plugins {
        id 'de.htwk.leipzig.grapholution.java-application-conventions'
        id 'org.openjfx.javafxplugin' version '0.0.10'
        id 'java'
        id 'application'
        id 'idea'
    }

mainClassName = "$moduleName/de.htwk.leipzig.grapholution.javafxapp.MainClass"
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': "de.htwk.leipzig.grapholution.javafxapp.MainClass"
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

    test {
        useJUnitPlatform()
    }

    dependencies {
        implementation 'org.apache.commons:commons-text'
        implementation project(':evoLibrary')
        implementation 'junit:junit:4.13.1'
        implementation 'org.testng:testng:7.1.0'

        testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
        testImplementation 'org.mockito:mockito-core:4.0.0'
        testImplementation group: 'org.testfx', name: 'testfx-core', version: '4.+'
        testImplementation group: 'org.testfx', name: 'testfx-junit', version: '4.+'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }

    javafx {
        version = '16'
        modules = ['javafx.fxml', 'javafx.controls']
    }

    sourceSets {
        main {
            resources {
                srcDirs = ["src/main/resources"]
                includes = ["**/*.fxml", "**/*.css"]
            }
        }
    }

    application {
        // Define the main class for the application.
        mainClass = 'de.htwk.leipzig.grapholution.javafxapp.MainClass'
    }
